generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String   @unique()
  hashedPassword String
  email          String   @unique()
  createdAt      DateTime @default(now())
  profile        Profile  @relation(fields: [profileId], references: [id])
  profileId      String

  followerId String?
  follower   User?   @relation("Followers", fields: [followerId], references: [id])
  followers  User[]  @relation("Followers")

  followingId String?
  follow      User?   @relation("followings", fields: [followingId], references: [id])
  following   User[]  @relation("followings")

  tweets              Tweet[]
  Like                Like[]
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  webAuthnChallenge   String?          @unique
  credentials         UserCredential[]
}

model UserCredential {
  id         String  @id
  userId     String
  user       User    @relation(fields: [userId], references: [id])
  publicKey  Bytes
  transports String?
  counter    BigInt
}

enum Theme {
  DARK
  LIGHT
}

model Profile {
  id          String  @id @default(cuid())
  image       String?
  displayName String
  theme       Theme   @default(LIGHT)
  bio         String?
  location    String?
  website     String?
  birth       String?
  User        User[]
}

model Tweet {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  likes     Like[]
  retweet   Share[]
  repliesToId String?
  repliesTo   Tweet?   @relation("RepliesTo", fields: [repliesToId], references: [id])
  replies Tweet[] @relation("RepliesTo")
}

model Like {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  tweetId   String
  userId    String
}

model Share {
  id      String @id @default(cuid())
  tweet   Tweet  @relation(fields: [tweetId], references: [id])
  tweetId String @unique()
}
